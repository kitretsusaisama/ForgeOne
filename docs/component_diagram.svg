<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="1200" height="1000" viewBox="0 0 1200 1000">
  <!-- Styles -->
  <style>
    .component { fill: #ecf0f1; stroke: #bdc3c7; stroke-width: 2; }
    .microkernel { fill: #3498db; stroke: #2980b9; stroke-width: 2; }
    .common { fill: #2ecc71; stroke: #27ae60; stroke-width: 2; }
    .interface { fill: #9b59b6; stroke: #8e44ad; stroke-width: 2; }
    .container { fill: #e74c3c; stroke: #c0392b; stroke-width: 2; }
    .data-flow { stroke: #7f8c8d; stroke-width: 1.5; marker-end: url(#arrowhead); }
    .trust-flow { stroke: #f39c12; stroke-width: 1.5; stroke-dasharray: 5,3; marker-end: url(#arrowhead); }
    .syscall-flow { stroke: #e74c3c; stroke-width: 1.5; marker-end: url(#arrowhead); }
    .component-title { font-family: Arial; font-size: 14px; fill: #2c3e50; font-weight: bold; }
    .component-subtitle { font-family: Arial; font-size: 12px; fill: #7f8c8d; }
    .flow-label { font-family: Arial; font-size: 10px; fill: #7f8c8d; }
    .header { font-family: Arial; font-size: 24px; fill: #2c3e50; font-weight: bold; }
    .subheader { font-family: Arial; font-size: 18px; fill: #7f8c8d; }
    .note { font-family: Arial; font-size: 12px; fill: #7f8c8d; font-style: italic; }
  </style>
  
  <!-- Markers -->
  <defs>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#7f8c8d" />
    </marker>
  </defs>
  
  <!-- Title -->
  <text x="600" y="40" text-anchor="middle" class="header">ForgeOne Component Interaction Diagram</text>
  <text x="600" y="70" text-anchor="middle" class="subheader">Data Flow and Component Relationships</text>
  
  <!-- Common Module Components -->
  <g>
    <rect x="50" y="120" width="200" height="100" rx="10" ry="10" class="common" />
    <text x="150" y="150" text-anchor="middle" class="component-title">Identity Context</text>
    <text x="150" y="170" text-anchor="middle" class="component-subtitle">User, Tenant, Trust Vector</text>
    
    <rect x="300" y="120" width="200" height="100" rx="10" ry="10" class="common" />
    <text x="400" y="150" text-anchor="middle" class="component-title">Trust Policy</text>
    <text x="400" y="170" text-anchor="middle" class="component-subtitle">Policy Rules, Thresholds</text>
    
    <rect x="550" y="120" width="200" height="100" rx="10" ry="10" class="common" />
    <text x="650" y="150" text-anchor="middle" class="component-title">Error Handling</text>
    <text x="650" y="170" text-anchor="middle" class="component-subtitle">Error Types, Results</text>
    
    <rect x="800" y="120" width="200" height="100" rx="10" ry="10" class="common" />
    <text x="900" y="150" text-anchor="middle" class="component-title">Crypto Primitives</text>
    <text x="900" y="170" text-anchor="middle" class="component-subtitle">Signatures, Hashing</text>
  </g>
  
  <!-- Microkernel Core Components -->
  <g>
    <rect x="50" y="280" width="200" height="100" rx="10" ry="10" class="microkernel" />
    <text x="150" y="310" text-anchor="middle" class="component-title">Boot Subsystem</text>
    <text x="150" y="330" text-anchor="middle" class="component-subtitle">Secure Boot, Trust Anchor</text>
    
    <rect x="300" y="280" width="200" height="100" rx="10" ry="10" class="microkernel" />
    <text x="400" y="310" text-anchor="middle" class="component-title">Runtime Subsystem</text>
    <text x="400" y="330" text-anchor="middle" class="component-subtitle">Lifecycle Management</text>
    
    <rect x="550" y="280" width="200" height="100" rx="10" ry="10" class="microkernel" />
    <text x="650" y="310" text-anchor="middle" class="component-title">Scheduler</text>
    <text x="650" y="330" text-anchor="middle" class="component-subtitle">Process Scheduling</text>
  </g>
  
  <!-- Trust Module Components -->
  <g>
    <rect x="50" y="440" width="200" height="100" rx="10" ry="10" class="microkernel" />
    <text x="150" y="470" text-anchor="middle" class="component-title">ZTA Policy Graph</text>
    <text x="150" y="490" text-anchor="middle" class="component-subtitle">Policy Evaluation</text>
    
    <rect x="300" y="440" width="200" height="100" rx="10" ry="10" class="microkernel" />
    <text x="400" y="470" text-anchor="middle" class="component-title">Syscall Enforcer</text>
    <text x="400" y="490" text-anchor="middle" class="component-subtitle">Enforcement, Violations</text>
    
    <rect x="550" y="440" width="200" height="100" rx="10" ry="10" class="microkernel" />
    <text x="650" y="470" text-anchor="middle" class="component-title">Redzone</text>
    <text x="650" y="490" text-anchor="middle" class="component-subtitle">Process Quarantine</text>
    
    <rect x="800" y="440" width="200" height="100" rx="10" ry="10" class="microkernel" />
    <text x="900" y="470" text-anchor="middle" class="component-title">Attestation</text>
    <text x="900" y="490" text-anchor="middle" class="component-subtitle">Cryptographic Verification</text>
  </g>
  
  <!-- Execution Module Components -->
  <g>
    <rect x="50" y="600" width="200" height="100" rx="10" ry="10" class="microkernel" />
    <text x="150" y="630" text-anchor="middle" class="component-title">Syscall Execution</text>
    <text x="150" y="650" text-anchor="middle" class="component-subtitle">Secure Syscall Handling</text>
    
    <rect x="300" y="600" width="200" height="100" rx="10" ry="10" class="microkernel" />
    <text x="400" y="630" text-anchor="middle" class="component-title">Container Runtime</text>
    <text x="400" y="650" text-anchor="middle" class="component-subtitle">Container Lifecycle</text>
    
    <rect x="550" y="600" width="200" height="100" rx="10" ry="10" class="microkernel" />
    <text x="650" y="630" text-anchor="middle" class="component-title">WASM Host</text>
    <text x="650" y="650" text-anchor="middle" class="component-subtitle">WebAssembly Execution</text>
  </g>
  
  <!-- Observer Module Components -->
  <g>
    <rect x="800" y="600" width="200" height="100" rx="10" ry="10" class="microkernel" />
    <text x="900" y="630" text-anchor="middle" class="component-title">Execution Trace</text>
    <text x="900" y="650" text-anchor="middle" class="component-subtitle">Execution DNA, Spans</text>
  </g>
  
  <!-- Interface Components -->
  <g>
    <rect x="300" y="760" width="200" height="100" rx="10" ry="10" class="interface" />
    <text x="400" y="790" text-anchor="middle" class="component-title">Microkernel API</text>
    <text x="400" y="810" text-anchor="middle" class="component-subtitle">Public Interface</text>
    
    <rect x="550" y="760" width="200" height="100" rx="10" ry="10" class="interface" />
    <text x="650" y="790" text-anchor="middle" class="component-title">Prelude</text>
    <text x="650" y="810" text-anchor="middle" class="component-subtitle">Re-exports, Convenience</text>
  </g>
  
  <!-- Container Workload -->
  <g>
    <rect x="50" y="760" width="200" height="100" rx="10" ry="10" class="container" />
    <text x="150" y="790" text-anchor="middle" class="component-title">Container Workload</text>
    <text x="150" y="810" text-anchor="middle" class="component-subtitle">User Application</text>
  </g>
  
  <!-- Connections -->
  <!-- Identity to ZTA Policy -->
  <line x1="150" y1="220" x2="150" y2="440" class="trust-flow" />
  <text x="130" y="330" class="flow-label">Trust Vector</text>
  
  <!-- Trust Policy to ZTA Policy -->
  <line x1="400" y1="220" x2="150" y2="440" class="trust-flow" />
  <text x="250" y="330" class="flow-label">Policy Rules</text>
  
  <!-- ZTA Policy to Syscall Enforcer -->
  <line x1="250" y1="490" x2="300" y2="490" class="data-flow" />
  <text x="275" y="480" class="flow-label">Policies</text>
  
  <!-- Syscall Enforcer to Redzone -->
  <line x1="500" y1="490" x2="550" y2="490" class="data-flow" />
  <text x="525" y="480" class="flow-label">Violations</text>
  
  <!-- Attestation to ZTA Policy -->
  <line x1="800" y1="490" x2="250" y2="490" class="trust-flow" />
  <text x="525" y="460" class="flow-label">Attestation Results</text>
  
  <!-- Crypto to Attestation -->
  <line x1="900" y1="220" x2="900" y2="440" class="data-flow" />
  <text x="910" y="330" class="flow-label">Crypto Verification</text>
  
  <!-- Boot to Runtime -->
  <line x1="250" y1="330" x2="300" y2="330" class="data-flow" />
  <text x="275" y="320" class="flow-label">Boot Context</text>
  
  <!-- Runtime to Scheduler -->
  <line x1="500" y1="330" x2="550" y2="330" class="data-flow" />
  <text x="525" y="320" class="flow-label">Runtime Context</text>
  
  <!-- Scheduler to Container Runtime -->
  <path d="M 650 380 C 650 500 400 600 400 600" class="data-flow" />
  <text x="500" y="500" class="flow-label">Schedule</text>
  
  <!-- Container Runtime to Container Workload -->
  <path d="M 400 700 C 400 730 150 760 150 760" class="data-flow" />
  <text x="250" y="730" class="flow-label">Execute</text>
  
  <!-- Container Workload to Syscall Execution -->
  <path d="M 150 760 C 150 730 150 700 150 700" class="syscall-flow" />
  <text x="160" y="730" class="flow-label">Syscalls</text>
  
  <!-- Syscall Execution to Syscall Enforcer -->
  <path d="M 150 600 C 150 550 400 540 400 540" class="syscall-flow" />
  <text x="250" y="570" class="flow-label">Enforce</text>
  
  <!-- Syscall Execution to Execution Trace -->
  <line x1="250" y1="650" x2="800" y2="650" class="data-flow" />
  <text x="525" y="640" class="flow-label">Trace Execution</text>
  
  <!-- Execution Trace to ZTA Policy -->
  <path d="M 900 600 C 900 520 150 520 150 540" class="trust-flow" />
  <text x="525" y="520" class="flow-label">Behavioral Analysis</text>
  
  <!-- Container Runtime to WASM Host -->
  <line x1="500" y1="650" x2="550" y2="650" class="data-flow" />
  <text x="525" y="640" class="flow-label">WASM Modules</text>
  
  <!-- Microkernel API to Container Runtime -->
  <path d="M 400 760 C 400 730 400 700 400 700" class="data-flow" />
  <text x="410" y="730" class="flow-label">API Calls</text>
  
  <!-- Prelude to Microkernel API -->
  <line x1="550" y1="810" x2="500" y2="810" class="data-flow" />
  <text x="525" y="800" class="flow-label">Re-exports</text>
  
  <!-- Error Handling connections -->
  <path d="M 650 220 C 750 300 750 500 750 600" class="data-flow" />
  <text x="760" y="400" class="flow-label">Error Propagation</text>
  
  <!-- Legend -->
  <g transform="translate(800, 760)">
    <rect x="0" y="0" width="200" height="100" rx="10" ry="10" fill="#ecf0f1" stroke="#bdc3c7" stroke-width="1" />
    <text x="100" y="20" text-anchor="middle" class="component-title">Legend</text>
    
    <line x1="20" y1="40" x2="70" y2="40" class="data-flow" />
    <text x="130" y="45" class="flow-label">Data Flow</text>
    
    <line x1="20" y1="60" x2="70" y2="60" class="trust-flow" />
    <text x="130" y="65" class="flow-label">Trust Flow</text>
    
    <line x1="20" y1="80" x2="70" y2="80" class="syscall-flow" />
    <text x="130" y="85" class="flow-label">Syscall Flow</text>
  </g>
  
  <!-- Notes -->
  <text x="600" y="900" text-anchor="middle" class="note">Note: This diagram shows the primary component interactions and data flows in the ForgeOne system.</text>
  <text x="600" y="920" text-anchor="middle" class="note">The Zero Trust Architecture enforces security at every interaction point between components.</text>
  <text x="600" y="940" text-anchor="middle" class="note">Execution DNA provides continuous behavioral analysis for adaptive trust decisions.</text>
</svg>