{
  "summary": {
    "total_errors": 45,
    "total_warnings": 0,
    "total_notes": 0,
    "files_with_errors": 4,
    "unique_error_types": 1,
    "error_categories": {
      "General": 44
    },
    "processing_time_seconds": 0.037326812744140625
  },
  "errors_by_file": {
    "common\\src\\db\\redb.rs": [
      {
        "file": "common\\src\\db\\redb.rs",
        "line": "281",
        "column": "35",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "281: ForgeError::IoError { message: \nformat!(\"Failed to create database directory: {}\", e), \nsource: None }\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\redb.rs",
        "line": "281",
        "column": "99",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "281: ForgeError::IoError { message: \nformat!(\"Failed to create database directory: {}\", e), \nsource: None }\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\redb.rs",
        "line": "360",
        "column": "35",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "360: ForgeError::IoError { message: \nformat!(\"Failed to create database directory: {}\", e), \nsource: None }\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\redb.rs",
        "line": "360",
        "column": "99",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "360: ForgeError::IoError { message: \nformat!(\"Failed to create database directory: {}\", e), \nsource: None }\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\redb.rs",
        "line": "438",
        "column": "35",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "438: ForgeError::IoError { message: \nformat!(\"Failed to create database directory: {}\", e), \nsource: None }\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\redb.rs",
        "line": "438",
        "column": "99",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "438: ForgeError::IoError { message: \nformat!(\"Failed to create database directory: {}\", e), \nsource: None }\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\redb.rs",
        "line": "516",
        "column": "35",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "516: ForgeError::IoError { message: \nformat!(\"Failed to create database directory: {}\", e), \nsource: None }\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\redb.rs",
        "line": "516",
        "column": "99",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "516: ForgeError::IoError { message: \nformat!(\"Failed to create database directory: {}\", e), \nsource: None }\n145: IoError(String),\n946: let index_key = format!(\"{}:{}\", \nentry.topic, entry.timestamp.timestamp_nanos());\n1050: format!(\"{}:{}\", topic, \nstart.timestamp_nanos())\n1056: format!(\"{}:{}\", topic, \nend.timestamp_nanos() + 1) // Add 1 to make it inclusive\n1670: Utc::now().timestamp_nanos(),\n1738: let index_key = format!(\"{}:{}\", \nself.current_topic, Utc::now().timestamp_nanos());\n1839: format!(\"{}:{}\", self.current_topic, \nstart.timestamp_nanos())\n1845: format!(\"{}:{}\", self.current_topic, \nend.timestamp_nanos() + 1) // Add 1 to make it inclusive\n1962: let entry_id = format!(\"{}_{}_{}\", \nself.current_topic, Utc::now().timestamp_nanos(), \nUuid::new_v4());\n2014: let index_key = format!(\"{}:{:?}:{}\", \nself.current_topic, level, Utc::now().timestamp_nanos());\n2180: format!(\"{}:{}:{}\", self.current_topic, \nlevel_str, start.timestamp_nanos())\n2186: format!(\"{}:{}:{}\", self.current_topic, \nlevel_str, end.timestamp_nanos() + 1) // Add 1 to make it \ninclusive",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      }
    ],
    "common\\src\\db\\snapshot.rs": [
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "42",
        "column": "44",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "42",
        "column": "68",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "155",
        "column": "48",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "155: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "155",
        "column": "72",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "155: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "161",
        "column": "44",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "161: .map_err(|e| ForgeError::IoError { message: \ne.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "161",
        "column": "68",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "161: .map_err(|e| ForgeError::IoError { message: \ne.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "166",
        "column": "61",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "166: let entry = entry.map_err(|e| \nForgeError::IoError { message: e.to_string(), source: None \n})?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "166",
        "column": "85",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "166: let entry = entry.map_err(|e| \nForgeError::IoError { message: e.to_string(), source: None \n})?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "172",
        "column": "52",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "172: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "172",
        "column": "76",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "172: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "190",
        "column": "48",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "190: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "190",
        "column": "72",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "190: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "218",
        "column": "48",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "218: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "218",
        "column": "72",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "218: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "224",
        "column": "48",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "224: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "224",
        "column": "72",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "224: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "228",
        "column": "48",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "228: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "228",
        "column": "72",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "228: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "318",
        "column": "52",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "318: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "318",
        "column": "76",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "318: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "325",
        "column": "52",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "325: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "325",
        "column": "76",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "325: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "356",
        "column": "48",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "356: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "356",
        "column": "72",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "356: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "415",
        "column": "48",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "415: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "415",
        "column": "72",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "415: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "423",
        "column": "48",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "423: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "423",
        "column": "72",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "423: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "643",
        "column": "42",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "643: return Err(ForgeError::IoError { message: \ne.to_string(), source: None });\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "643",
        "column": "66",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "643: return Err(ForgeError::IoError { message: \ne.to_string(), source: None });\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      }
    ],
    "common\\src\\db\\crypto.rs": [
      {
        "file": "common\\src\\db\\crypto.rs",
        "line": "293",
        "column": "52",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "293: .map_err(|e| ForgeError::IoError { \nmessage: format!(\"Failed to backup master key: {}\", e), \nsource: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\crypto.rs",
        "line": "293",
        "column": "108",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "293: .map_err(|e| ForgeError::IoError { \nmessage: format!(\"Failed to backup master key: {}\", e), \nsource: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\crypto.rs",
        "line": "296",
        "column": "52",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "296: .map_err(|e| ForgeError::IoError { \nmessage: format!(\"Failed to write master key: {}\", e), \nsource: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\crypto.rs",
        "line": "296",
        "column": "107",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "296: .map_err(|e| ForgeError::IoError { \nmessage: format!(\"Failed to write master key: {}\", e), \nsource: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      }
    ],
    "common\\src\\db\\mod.rs": [
      {
        "file": "common\\src\\db\\mod.rs",
        "line": "90",
        "column": "54",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\mod.rs",
        "line": "90",
        "column": "78",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "`#[warn(unused_mut)]` on by default\n\nwarning: variable does not need to be mutable\n    --> common\\src\\db\\redb.rs:2152:17\n     |\n2152 |             let mut count = 0;\n     |                 ----^^^^^\n     |                 |\n     |                 help: remove this `mut`\n\nwarning: unused variable: `metadata`\n   --> common\\src\\db\\snapshot.rs:274:13\n    |\n274 |         let metadata = self.get_snapshot(snapshot_id)?\n    |             ^^^^^^^^ help: if this is intentional, \nprefix it with an underscore: `_metadata`\n\nwarning: unused variable: `snapshot_dir`\n   --> common\\src\\db\\snapshot.rs:288:13\n    |\n288 |         let snapshot_dir = \nself.base_dir.join(\"data\").join(snapshot_id);\n    |             ^^^^^^^^^^^^ help: if this is \nintentional, prefix it with an underscore: `_snapshot_dir`\n\nwarning: unused variable: `tag`\n   --> common\\src\\db\\snapshot.rs:489:14\n    |\n489 |         for (tag, mut snapshots) in tag_groups {\n    |              ^^^ help: if this is intentional, prefix \nit with an underscore: `_tag`\n\nwarning: unused variable: `field`\n   --> common\\src\\db\\crypto.rs:233:46\n    |\n233 |     pub fn encrypt_field(&self, table: &str, field: \n&str, value: &[u8]) -> Result<String> {\n    |                                              ^^^^^ \nhelp: if this is intentional, prefix it with an underscore: \n`_field`\n\nwarning: unused variable: `field`\n   --> common\\src\\db\\crypto.rs:249:46\n    |\n249 |     pub fn decrypt_field(&self, table: &str, field: \n&str, value: &str) -> Result<Vec<u8>> {\n    |                                              ^^^^^ \nhelp: if this is intentional, prefix it with an underscore: \n`_field`\n\nwarning: unused variable: `referenced_table`\n   --> common\\src\\db\\schema.rs:728:34\n    |\n728 |             FieldType::Reference(referenced_table) => \n{\n    |                                  ^^^^^^^^^^^^^^^^ \nhelp: if this is intentional, prefix it with an underscore: \n`_referenced_table`\n\nwarning: unused variable: `e`\n   --> common\\src\\db\\metrics.rs:836:56\n    |\n836 |         \nserde_json::to_string_pretty(&export).map_err(|e| {\n    |                                                       \n ^ help: if this is intentional, prefix it with an \nunderscore: `_e`\n\nFor more information about this error, try `rustc --explain \nE0559`.\nwarning: `common` (lib) generated 70 warnings",
        "rust_suggestion": "`#[warn(unused_mut)]` on by default\n\nwarning: variable does not need to be mutable\n    --> common\\src\\db\\redb.rs:2152:17\n     |\n2152 |             let mut count = 0;\n     |                 ----^^^^^\n     |                 |\n     |                 help: remove this `mut`\n\nwarning: unused variable: `metadata`\n   --> common\\src\\db\\snapshot.rs:274:13\n    |\n274 |         let metadata = self.get_snapshot(snapshot_id)?\n    |             ^^^^^^^^ help: if this is intentional, \nprefix it with an underscore: `_metadata`\n\nwarning: unused variable: `snapshot_dir`\n   --> common\\src\\db\\snapshot.rs:288:13\n    |\n288 |         let snapshot_dir = \nself.base_dir.join(\"data\").join(snapshot_id);\n    |             ^^^^^^^^^^^^ help: if this is \nintentional, prefix it with an underscore: `_snapshot_dir`\n\nwarning: unused variable: `tag`\n   --> common\\src\\db\\snapshot.rs:489:14\n    |\n489 |         for (tag, mut snapshots) in tag_groups {\n    |              ^^^ help: if this is intentional, prefix \nit with an underscore: `_tag`\n\nwarning: unused variable: `field`\n   --> common\\src\\db\\crypto.rs:233:46\n    |\n233 |     pub fn encrypt_field(&self, table: &str, field: \n&str, value: &[u8]) -> Result<String> {\n    |                                              ^^^^^ \nhelp: if this is intentional, prefix it with an underscore: \n`_field`\n\nwarning: unused variable: `field`\n   --> common\\src\\db\\crypto.rs:249:46\n    |\n249 |     pub fn decrypt_field(&self, table: &str, field: \n&str, value: &str) -> Result<Vec<u8>> {\n    |                                              ^^^^^ \nhelp: if this is intentional, prefix it with an underscore: \n`_field`\n\nwarning: unused variable: `referenced_table`\n   --> common\\src\\db\\schema.rs:728:34\n    |\n728 |             FieldType::Reference(referenced_table) => \n{\n    |                                  ^^^^^^^^^^^^^^^^ \nhelp: if this is intentional, prefix it with an underscore: \n`_referenced_table`\n\nwarning: unused variable: `e`\n   --> common\\src\\db\\metrics.rs:836:56\n    |\n836 |         \nserde_json::to_string_pretty(&export).map_err(|e| {\n    |                                                       \n ^ help: if this is intentional, prefix it with an \nunderscore: `_e`\n\nFor more information about this error, try `rustc --explain \nE0559`.\nwarning: `common` (lib) generated 70 warnings",
        "code_snippet": "145: IoError(String),\n30: use crate::db::model::{EventPriority, Persistable, \nStorageBackend, StreamableEvent};\n226: fn write(&self, event: &AuditEvent) -> Result<()> \n{\n251: fn write(&self, event: &AuditEvent) -> Result<()> \n{\n276: fn write(&self, event: &AuditEvent) -> Result<()> \n{\n362: pub fn derive_key(master_key: &[u8], info: &[u8], \nlength: usize) -> Result<[u8; 32]> {\n784: let read_txn = db.begin_read().map_err(|e| {\n2143: let log_index_table = \nread_txn.open_table(TableDefinition::<&str, \n&str>::new(\"log_index\")).map_err(|e| {\n2147: let logs_table = \nread_txn.open_table(TableDefinition::<&str, \n&str>::new(\"logs\")).map_err(|e| {\n2151: let mut logs: Vec<LogEntry> = Vec::new();\n2152: let mut count = 0;\n2155: let level_str = if let Some(ref l) = \nlevel {\n2151: let mut logs: Vec<LogEntry> = Vec::new();\n2152: let mut count = 0;\n274: let metadata = self.get_snapshot(snapshot_id)?\n288: let snapshot_dir = \nself.base_dir.join(\"data\").join(snapshot_id);\n489: for (tag, mut snapshots) in tag_groups {\n233: pub fn encrypt_field(&self, table: &str, field: \n&str, value: &[u8]) -> Result<String> {\n249: pub fn decrypt_field(&self, table: &str, field: \n&str, value: &str) -> Result<Vec<u8>> {\n728: FieldType::Reference(referenced_table) => \n{\n836: serde_json::to_string_pretty(&export).map_err(|e| {",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      }
    ]
  },
  "errors_by_type": {
    "E0559": [
      {
        "file": "common\\src\\db\\redb.rs",
        "line": "281",
        "column": "35",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "281: ForgeError::IoError { message: \nformat!(\"Failed to create database directory: {}\", e), \nsource: None }\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\redb.rs",
        "line": "281",
        "column": "99",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "281: ForgeError::IoError { message: \nformat!(\"Failed to create database directory: {}\", e), \nsource: None }\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\redb.rs",
        "line": "360",
        "column": "35",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "360: ForgeError::IoError { message: \nformat!(\"Failed to create database directory: {}\", e), \nsource: None }\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\redb.rs",
        "line": "360",
        "column": "99",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "360: ForgeError::IoError { message: \nformat!(\"Failed to create database directory: {}\", e), \nsource: None }\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\redb.rs",
        "line": "438",
        "column": "35",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "438: ForgeError::IoError { message: \nformat!(\"Failed to create database directory: {}\", e), \nsource: None }\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\redb.rs",
        "line": "438",
        "column": "99",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "438: ForgeError::IoError { message: \nformat!(\"Failed to create database directory: {}\", e), \nsource: None }\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\redb.rs",
        "line": "516",
        "column": "35",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "516: ForgeError::IoError { message: \nformat!(\"Failed to create database directory: {}\", e), \nsource: None }\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\redb.rs",
        "line": "516",
        "column": "99",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "516: ForgeError::IoError { message: \nformat!(\"Failed to create database directory: {}\", e), \nsource: None }\n145: IoError(String),\n946: let index_key = format!(\"{}:{}\", \nentry.topic, entry.timestamp.timestamp_nanos());\n1050: format!(\"{}:{}\", topic, \nstart.timestamp_nanos())\n1056: format!(\"{}:{}\", topic, \nend.timestamp_nanos() + 1) // Add 1 to make it inclusive\n1670: Utc::now().timestamp_nanos(),\n1738: let index_key = format!(\"{}:{}\", \nself.current_topic, Utc::now().timestamp_nanos());\n1839: format!(\"{}:{}\", self.current_topic, \nstart.timestamp_nanos())\n1845: format!(\"{}:{}\", self.current_topic, \nend.timestamp_nanos() + 1) // Add 1 to make it inclusive\n1962: let entry_id = format!(\"{}_{}_{}\", \nself.current_topic, Utc::now().timestamp_nanos(), \nUuid::new_v4());\n2014: let index_key = format!(\"{}:{:?}:{}\", \nself.current_topic, level, Utc::now().timestamp_nanos());\n2180: format!(\"{}:{}:{}\", self.current_topic, \nlevel_str, start.timestamp_nanos())\n2186: format!(\"{}:{}:{}\", self.current_topic, \nlevel_str, end.timestamp_nanos() + 1) // Add 1 to make it \ninclusive",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "42",
        "column": "44",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "42",
        "column": "68",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "155",
        "column": "48",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "155: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "155",
        "column": "72",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "155: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "161",
        "column": "44",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "161: .map_err(|e| ForgeError::IoError { message: \ne.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "161",
        "column": "68",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "161: .map_err(|e| ForgeError::IoError { message: \ne.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "166",
        "column": "61",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "166: let entry = entry.map_err(|e| \nForgeError::IoError { message: e.to_string(), source: None \n})?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "166",
        "column": "85",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "166: let entry = entry.map_err(|e| \nForgeError::IoError { message: e.to_string(), source: None \n})?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "172",
        "column": "52",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "172: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "172",
        "column": "76",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "172: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "190",
        "column": "48",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "190: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "190",
        "column": "72",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "190: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "218",
        "column": "48",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "218: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "218",
        "column": "72",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "218: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "224",
        "column": "48",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "224: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "224",
        "column": "72",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "224: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "228",
        "column": "48",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "228: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "228",
        "column": "72",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "228: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "318",
        "column": "52",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "318: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "318",
        "column": "76",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "318: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "325",
        "column": "52",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "325: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "325",
        "column": "76",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "325: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "356",
        "column": "48",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "356: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "356",
        "column": "72",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "356: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "415",
        "column": "48",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "415: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "415",
        "column": "72",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "415: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "423",
        "column": "48",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "423: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "423",
        "column": "72",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "423: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "643",
        "column": "42",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "643: return Err(ForgeError::IoError { message: \ne.to_string(), source: None });\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "643",
        "column": "66",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "643: return Err(ForgeError::IoError { message: \ne.to_string(), source: None });\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\crypto.rs",
        "line": "293",
        "column": "52",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "293: .map_err(|e| ForgeError::IoError { \nmessage: format!(\"Failed to backup master key: {}\", e), \nsource: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\crypto.rs",
        "line": "293",
        "column": "108",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "293: .map_err(|e| ForgeError::IoError { \nmessage: format!(\"Failed to backup master key: {}\", e), \nsource: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\crypto.rs",
        "line": "296",
        "column": "52",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "296: .map_err(|e| ForgeError::IoError { \nmessage: format!(\"Failed to write master key: {}\", e), \nsource: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\crypto.rs",
        "line": "296",
        "column": "107",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "296: .map_err(|e| ForgeError::IoError { \nmessage: format!(\"Failed to write master key: {}\", e), \nsource: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\mod.rs",
        "line": "90",
        "column": "54",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\mod.rs",
        "line": "90",
        "column": "78",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "`#[warn(unused_mut)]` on by default\n\nwarning: variable does not need to be mutable\n    --> common\\src\\db\\redb.rs:2152:17\n     |\n2152 |             let mut count = 0;\n     |                 ----^^^^^\n     |                 |\n     |                 help: remove this `mut`\n\nwarning: unused variable: `metadata`\n   --> common\\src\\db\\snapshot.rs:274:13\n    |\n274 |         let metadata = self.get_snapshot(snapshot_id)?\n    |             ^^^^^^^^ help: if this is intentional, \nprefix it with an underscore: `_metadata`\n\nwarning: unused variable: `snapshot_dir`\n   --> common\\src\\db\\snapshot.rs:288:13\n    |\n288 |         let snapshot_dir = \nself.base_dir.join(\"data\").join(snapshot_id);\n    |             ^^^^^^^^^^^^ help: if this is \nintentional, prefix it with an underscore: `_snapshot_dir`\n\nwarning: unused variable: `tag`\n   --> common\\src\\db\\snapshot.rs:489:14\n    |\n489 |         for (tag, mut snapshots) in tag_groups {\n    |              ^^^ help: if this is intentional, prefix \nit with an underscore: `_tag`\n\nwarning: unused variable: `field`\n   --> common\\src\\db\\crypto.rs:233:46\n    |\n233 |     pub fn encrypt_field(&self, table: &str, field: \n&str, value: &[u8]) -> Result<String> {\n    |                                              ^^^^^ \nhelp: if this is intentional, prefix it with an underscore: \n`_field`\n\nwarning: unused variable: `field`\n   --> common\\src\\db\\crypto.rs:249:46\n    |\n249 |     pub fn decrypt_field(&self, table: &str, field: \n&str, value: &str) -> Result<Vec<u8>> {\n    |                                              ^^^^^ \nhelp: if this is intentional, prefix it with an underscore: \n`_field`\n\nwarning: unused variable: `referenced_table`\n   --> common\\src\\db\\schema.rs:728:34\n    |\n728 |             FieldType::Reference(referenced_table) => \n{\n    |                                  ^^^^^^^^^^^^^^^^ \nhelp: if this is intentional, prefix it with an underscore: \n`_referenced_table`\n\nwarning: unused variable: `e`\n   --> common\\src\\db\\metrics.rs:836:56\n    |\n836 |         \nserde_json::to_string_pretty(&export).map_err(|e| {\n    |                                                       \n ^ help: if this is intentional, prefix it with an \nunderscore: `_e`\n\nFor more information about this error, try `rustc --explain \nE0559`.\nwarning: `common` (lib) generated 70 warnings",
        "rust_suggestion": "`#[warn(unused_mut)]` on by default\n\nwarning: variable does not need to be mutable\n    --> common\\src\\db\\redb.rs:2152:17\n     |\n2152 |             let mut count = 0;\n     |                 ----^^^^^\n     |                 |\n     |                 help: remove this `mut`\n\nwarning: unused variable: `metadata`\n   --> common\\src\\db\\snapshot.rs:274:13\n    |\n274 |         let metadata = self.get_snapshot(snapshot_id)?\n    |             ^^^^^^^^ help: if this is intentional, \nprefix it with an underscore: `_metadata`\n\nwarning: unused variable: `snapshot_dir`\n   --> common\\src\\db\\snapshot.rs:288:13\n    |\n288 |         let snapshot_dir = \nself.base_dir.join(\"data\").join(snapshot_id);\n    |             ^^^^^^^^^^^^ help: if this is \nintentional, prefix it with an underscore: `_snapshot_dir`\n\nwarning: unused variable: `tag`\n   --> common\\src\\db\\snapshot.rs:489:14\n    |\n489 |         for (tag, mut snapshots) in tag_groups {\n    |              ^^^ help: if this is intentional, prefix \nit with an underscore: `_tag`\n\nwarning: unused variable: `field`\n   --> common\\src\\db\\crypto.rs:233:46\n    |\n233 |     pub fn encrypt_field(&self, table: &str, field: \n&str, value: &[u8]) -> Result<String> {\n    |                                              ^^^^^ \nhelp: if this is intentional, prefix it with an underscore: \n`_field`\n\nwarning: unused variable: `field`\n   --> common\\src\\db\\crypto.rs:249:46\n    |\n249 |     pub fn decrypt_field(&self, table: &str, field: \n&str, value: &str) -> Result<Vec<u8>> {\n    |                                              ^^^^^ \nhelp: if this is intentional, prefix it with an underscore: \n`_field`\n\nwarning: unused variable: `referenced_table`\n   --> common\\src\\db\\schema.rs:728:34\n    |\n728 |             FieldType::Reference(referenced_table) => \n{\n    |                                  ^^^^^^^^^^^^^^^^ \nhelp: if this is intentional, prefix it with an underscore: \n`_referenced_table`\n\nwarning: unused variable: `e`\n   --> common\\src\\db\\metrics.rs:836:56\n    |\n836 |         \nserde_json::to_string_pretty(&export).map_err(|e| {\n    |                                                       \n ^ help: if this is intentional, prefix it with an \nunderscore: `_e`\n\nFor more information about this error, try `rustc --explain \nE0559`.\nwarning: `common` (lib) generated 70 warnings",
        "code_snippet": "145: IoError(String),\n30: use crate::db::model::{EventPriority, Persistable, \nStorageBackend, StreamableEvent};\n226: fn write(&self, event: &AuditEvent) -> Result<()> \n{\n251: fn write(&self, event: &AuditEvent) -> Result<()> \n{\n276: fn write(&self, event: &AuditEvent) -> Result<()> \n{\n362: pub fn derive_key(master_key: &[u8], info: &[u8], \nlength: usize) -> Result<[u8; 32]> {\n784: let read_txn = db.begin_read().map_err(|e| {\n2143: let log_index_table = \nread_txn.open_table(TableDefinition::<&str, \n&str>::new(\"log_index\")).map_err(|e| {\n2147: let logs_table = \nread_txn.open_table(TableDefinition::<&str, \n&str>::new(\"logs\")).map_err(|e| {\n2151: let mut logs: Vec<LogEntry> = Vec::new();\n2152: let mut count = 0;\n2155: let level_str = if let Some(ref l) = \nlevel {\n2151: let mut logs: Vec<LogEntry> = Vec::new();\n2152: let mut count = 0;\n274: let metadata = self.get_snapshot(snapshot_id)?\n288: let snapshot_dir = \nself.base_dir.join(\"data\").join(snapshot_id);\n489: for (tag, mut snapshots) in tag_groups {\n233: pub fn encrypt_field(&self, table: &str, field: \n&str, value: &[u8]) -> Result<String> {\n249: pub fn decrypt_field(&self, table: &str, field: \n&str, value: &str) -> Result<Vec<u8>> {\n728: FieldType::Reference(referenced_table) => \n{\n836: serde_json::to_string_pretty(&export).map_err(|e| {",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      }
    ]
  },
  "errors_by_category": {
    "General": [
      {
        "file": "common\\src\\db\\redb.rs",
        "line": "281",
        "column": "35",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "281: ForgeError::IoError { message: \nformat!(\"Failed to create database directory: {}\", e), \nsource: None }\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\redb.rs",
        "line": "281",
        "column": "99",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "281: ForgeError::IoError { message: \nformat!(\"Failed to create database directory: {}\", e), \nsource: None }\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\redb.rs",
        "line": "360",
        "column": "35",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "360: ForgeError::IoError { message: \nformat!(\"Failed to create database directory: {}\", e), \nsource: None }\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\redb.rs",
        "line": "360",
        "column": "99",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "360: ForgeError::IoError { message: \nformat!(\"Failed to create database directory: {}\", e), \nsource: None }\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\redb.rs",
        "line": "438",
        "column": "35",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "438: ForgeError::IoError { message: \nformat!(\"Failed to create database directory: {}\", e), \nsource: None }\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\redb.rs",
        "line": "438",
        "column": "99",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "438: ForgeError::IoError { message: \nformat!(\"Failed to create database directory: {}\", e), \nsource: None }\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\redb.rs",
        "line": "516",
        "column": "35",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "516: ForgeError::IoError { message: \nformat!(\"Failed to create database directory: {}\", e), \nsource: None }\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\redb.rs",
        "line": "516",
        "column": "99",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "516: ForgeError::IoError { message: \nformat!(\"Failed to create database directory: {}\", e), \nsource: None }\n145: IoError(String),\n946: let index_key = format!(\"{}:{}\", \nentry.topic, entry.timestamp.timestamp_nanos());\n1050: format!(\"{}:{}\", topic, \nstart.timestamp_nanos())\n1056: format!(\"{}:{}\", topic, \nend.timestamp_nanos() + 1) // Add 1 to make it inclusive\n1670: Utc::now().timestamp_nanos(),\n1738: let index_key = format!(\"{}:{}\", \nself.current_topic, Utc::now().timestamp_nanos());\n1839: format!(\"{}:{}\", self.current_topic, \nstart.timestamp_nanos())\n1845: format!(\"{}:{}\", self.current_topic, \nend.timestamp_nanos() + 1) // Add 1 to make it inclusive\n1962: let entry_id = format!(\"{}_{}_{}\", \nself.current_topic, Utc::now().timestamp_nanos(), \nUuid::new_v4());\n2014: let index_key = format!(\"{}:{:?}:{}\", \nself.current_topic, level, Utc::now().timestamp_nanos());\n2180: format!(\"{}:{}:{}\", self.current_topic, \nlevel_str, start.timestamp_nanos())\n2186: format!(\"{}:{}:{}\", self.current_topic, \nlevel_str, end.timestamp_nanos() + 1) // Add 1 to make it \ninclusive",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "42",
        "column": "44",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "42",
        "column": "68",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "155",
        "column": "48",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "155: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "155",
        "column": "72",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "155: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "161",
        "column": "44",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "161: .map_err(|e| ForgeError::IoError { message: \ne.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "161",
        "column": "68",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "161: .map_err(|e| ForgeError::IoError { message: \ne.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "166",
        "column": "61",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "166: let entry = entry.map_err(|e| \nForgeError::IoError { message: e.to_string(), source: None \n})?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "166",
        "column": "85",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "166: let entry = entry.map_err(|e| \nForgeError::IoError { message: e.to_string(), source: None \n})?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "172",
        "column": "52",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "172: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "172",
        "column": "76",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "172: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "190",
        "column": "48",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "190: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "190",
        "column": "72",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "190: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "218",
        "column": "48",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "218: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "218",
        "column": "72",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "218: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "224",
        "column": "48",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "224: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "224",
        "column": "72",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "224: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "228",
        "column": "48",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "228: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "228",
        "column": "72",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "228: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "318",
        "column": "52",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "318: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "318",
        "column": "76",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "318: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "325",
        "column": "52",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "325: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "325",
        "column": "76",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "325: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "356",
        "column": "48",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "356: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "356",
        "column": "72",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "356: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "415",
        "column": "48",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "415: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "415",
        "column": "72",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "415: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "423",
        "column": "48",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "423: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "423",
        "column": "72",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "423: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "643",
        "column": "42",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "643: return Err(ForgeError::IoError { message: \ne.to_string(), source: None });\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "643",
        "column": "66",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "643: return Err(ForgeError::IoError { message: \ne.to_string(), source: None });\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\crypto.rs",
        "line": "293",
        "column": "52",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "293: .map_err(|e| ForgeError::IoError { \nmessage: format!(\"Failed to backup master key: {}\", e), \nsource: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\crypto.rs",
        "line": "293",
        "column": "108",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "293: .map_err(|e| ForgeError::IoError { \nmessage: format!(\"Failed to backup master key: {}\", e), \nsource: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\crypto.rs",
        "line": "296",
        "column": "52",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "296: .map_err(|e| ForgeError::IoError { \nmessage: format!(\"Failed to write master key: {}\", e), \nsource: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\crypto.rs",
        "line": "296",
        "column": "107",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "296: .map_err(|e| ForgeError::IoError { \nmessage: format!(\"Failed to write master key: {}\", e), \nsource: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\mod.rs",
        "line": "90",
        "column": "54",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\mod.rs",
        "line": "90",
        "column": "78",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "`#[warn(unused_mut)]` on by default\n\nwarning: variable does not need to be mutable\n    --> common\\src\\db\\redb.rs:2152:17\n     |\n2152 |             let mut count = 0;\n     |                 ----^^^^^\n     |                 |\n     |                 help: remove this `mut`\n\nwarning: unused variable: `metadata`\n   --> common\\src\\db\\snapshot.rs:274:13\n    |\n274 |         let metadata = self.get_snapshot(snapshot_id)?\n    |             ^^^^^^^^ help: if this is intentional, \nprefix it with an underscore: `_metadata`\n\nwarning: unused variable: `snapshot_dir`\n   --> common\\src\\db\\snapshot.rs:288:13\n    |\n288 |         let snapshot_dir = \nself.base_dir.join(\"data\").join(snapshot_id);\n    |             ^^^^^^^^^^^^ help: if this is \nintentional, prefix it with an underscore: `_snapshot_dir`\n\nwarning: unused variable: `tag`\n   --> common\\src\\db\\snapshot.rs:489:14\n    |\n489 |         for (tag, mut snapshots) in tag_groups {\n    |              ^^^ help: if this is intentional, prefix \nit with an underscore: `_tag`\n\nwarning: unused variable: `field`\n   --> common\\src\\db\\crypto.rs:233:46\n    |\n233 |     pub fn encrypt_field(&self, table: &str, field: \n&str, value: &[u8]) -> Result<String> {\n    |                                              ^^^^^ \nhelp: if this is intentional, prefix it with an underscore: \n`_field`\n\nwarning: unused variable: `field`\n   --> common\\src\\db\\crypto.rs:249:46\n    |\n249 |     pub fn decrypt_field(&self, table: &str, field: \n&str, value: &str) -> Result<Vec<u8>> {\n    |                                              ^^^^^ \nhelp: if this is intentional, prefix it with an underscore: \n`_field`\n\nwarning: unused variable: `referenced_table`\n   --> common\\src\\db\\schema.rs:728:34\n    |\n728 |             FieldType::Reference(referenced_table) => \n{\n    |                                  ^^^^^^^^^^^^^^^^ \nhelp: if this is intentional, prefix it with an underscore: \n`_referenced_table`\n\nwarning: unused variable: `e`\n   --> common\\src\\db\\metrics.rs:836:56\n    |\n836 |         \nserde_json::to_string_pretty(&export).map_err(|e| {\n    |                                                       \n ^ help: if this is intentional, prefix it with an \nunderscore: `_e`\n\nFor more information about this error, try `rustc --explain \nE0559`.\nwarning: `common` (lib) generated 70 warnings",
        "rust_suggestion": "`#[warn(unused_mut)]` on by default\n\nwarning: variable does not need to be mutable\n    --> common\\src\\db\\redb.rs:2152:17\n     |\n2152 |             let mut count = 0;\n     |                 ----^^^^^\n     |                 |\n     |                 help: remove this `mut`\n\nwarning: unused variable: `metadata`\n   --> common\\src\\db\\snapshot.rs:274:13\n    |\n274 |         let metadata = self.get_snapshot(snapshot_id)?\n    |             ^^^^^^^^ help: if this is intentional, \nprefix it with an underscore: `_metadata`\n\nwarning: unused variable: `snapshot_dir`\n   --> common\\src\\db\\snapshot.rs:288:13\n    |\n288 |         let snapshot_dir = \nself.base_dir.join(\"data\").join(snapshot_id);\n    |             ^^^^^^^^^^^^ help: if this is \nintentional, prefix it with an underscore: `_snapshot_dir`\n\nwarning: unused variable: `tag`\n   --> common\\src\\db\\snapshot.rs:489:14\n    |\n489 |         for (tag, mut snapshots) in tag_groups {\n    |              ^^^ help: if this is intentional, prefix \nit with an underscore: `_tag`\n\nwarning: unused variable: `field`\n   --> common\\src\\db\\crypto.rs:233:46\n    |\n233 |     pub fn encrypt_field(&self, table: &str, field: \n&str, value: &[u8]) -> Result<String> {\n    |                                              ^^^^^ \nhelp: if this is intentional, prefix it with an underscore: \n`_field`\n\nwarning: unused variable: `field`\n   --> common\\src\\db\\crypto.rs:249:46\n    |\n249 |     pub fn decrypt_field(&self, table: &str, field: \n&str, value: &str) -> Result<Vec<u8>> {\n    |                                              ^^^^^ \nhelp: if this is intentional, prefix it with an underscore: \n`_field`\n\nwarning: unused variable: `referenced_table`\n   --> common\\src\\db\\schema.rs:728:34\n    |\n728 |             FieldType::Reference(referenced_table) => \n{\n    |                                  ^^^^^^^^^^^^^^^^ \nhelp: if this is intentional, prefix it with an underscore: \n`_referenced_table`\n\nwarning: unused variable: `e`\n   --> common\\src\\db\\metrics.rs:836:56\n    |\n836 |         \nserde_json::to_string_pretty(&export).map_err(|e| {\n    |                                                       \n ^ help: if this is intentional, prefix it with an \nunderscore: `_e`\n\nFor more information about this error, try `rustc --explain \nE0559`.\nwarning: `common` (lib) generated 70 warnings",
        "code_snippet": "145: IoError(String),\n30: use crate::db::model::{EventPriority, Persistable, \nStorageBackend, StreamableEvent};\n226: fn write(&self, event: &AuditEvent) -> Result<()> \n{\n251: fn write(&self, event: &AuditEvent) -> Result<()> \n{\n276: fn write(&self, event: &AuditEvent) -> Result<()> \n{\n362: pub fn derive_key(master_key: &[u8], info: &[u8], \nlength: usize) -> Result<[u8; 32]> {\n784: let read_txn = db.begin_read().map_err(|e| {\n2143: let log_index_table = \nread_txn.open_table(TableDefinition::<&str, \n&str>::new(\"log_index\")).map_err(|e| {\n2147: let logs_table = \nread_txn.open_table(TableDefinition::<&str, \n&str>::new(\"logs\")).map_err(|e| {\n2151: let mut logs: Vec<LogEntry> = Vec::new();\n2152: let mut count = 0;\n2155: let level_str = if let Some(ref l) = \nlevel {\n2151: let mut logs: Vec<LogEntry> = Vec::new();\n2152: let mut count = 0;\n274: let metadata = self.get_snapshot(snapshot_id)?\n288: let snapshot_dir = \nself.base_dir.join(\"data\").join(snapshot_id);\n489: for (tag, mut snapshots) in tag_groups {\n233: pub fn encrypt_field(&self, table: &str, field: \n&str, value: &[u8]) -> Result<String> {\n249: pub fn decrypt_field(&self, table: &str, field: \n&str, value: &str) -> Result<Vec<u8>> {\n728: FieldType::Reference(referenced_table) => \n{\n836: serde_json::to_string_pretty(&export).map_err(|e| {",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      }
    ]
  },
  "errors_by_severity": {
    "error": [
      {
        "file": "common\\src\\db\\redb.rs",
        "line": "281",
        "column": "35",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "281: ForgeError::IoError { message: \nformat!(\"Failed to create database directory: {}\", e), \nsource: None }\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\redb.rs",
        "line": "281",
        "column": "99",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "281: ForgeError::IoError { message: \nformat!(\"Failed to create database directory: {}\", e), \nsource: None }\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\redb.rs",
        "line": "360",
        "column": "35",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "360: ForgeError::IoError { message: \nformat!(\"Failed to create database directory: {}\", e), \nsource: None }\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\redb.rs",
        "line": "360",
        "column": "99",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "360: ForgeError::IoError { message: \nformat!(\"Failed to create database directory: {}\", e), \nsource: None }\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\redb.rs",
        "line": "438",
        "column": "35",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "438: ForgeError::IoError { message: \nformat!(\"Failed to create database directory: {}\", e), \nsource: None }\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\redb.rs",
        "line": "438",
        "column": "99",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "438: ForgeError::IoError { message: \nformat!(\"Failed to create database directory: {}\", e), \nsource: None }\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\redb.rs",
        "line": "516",
        "column": "35",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "516: ForgeError::IoError { message: \nformat!(\"Failed to create database directory: {}\", e), \nsource: None }\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\redb.rs",
        "line": "516",
        "column": "99",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "516: ForgeError::IoError { message: \nformat!(\"Failed to create database directory: {}\", e), \nsource: None }\n145: IoError(String),\n946: let index_key = format!(\"{}:{}\", \nentry.topic, entry.timestamp.timestamp_nanos());\n1050: format!(\"{}:{}\", topic, \nstart.timestamp_nanos())\n1056: format!(\"{}:{}\", topic, \nend.timestamp_nanos() + 1) // Add 1 to make it inclusive\n1670: Utc::now().timestamp_nanos(),\n1738: let index_key = format!(\"{}:{}\", \nself.current_topic, Utc::now().timestamp_nanos());\n1839: format!(\"{}:{}\", self.current_topic, \nstart.timestamp_nanos())\n1845: format!(\"{}:{}\", self.current_topic, \nend.timestamp_nanos() + 1) // Add 1 to make it inclusive\n1962: let entry_id = format!(\"{}_{}_{}\", \nself.current_topic, Utc::now().timestamp_nanos(), \nUuid::new_v4());\n2014: let index_key = format!(\"{}:{:?}:{}\", \nself.current_topic, level, Utc::now().timestamp_nanos());\n2180: format!(\"{}:{}:{}\", self.current_topic, \nlevel_str, start.timestamp_nanos())\n2186: format!(\"{}:{}:{}\", self.current_topic, \nlevel_str, end.timestamp_nanos() + 1) // Add 1 to make it \ninclusive",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "42",
        "column": "44",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "42",
        "column": "68",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "155",
        "column": "48",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "155: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "155",
        "column": "72",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "155: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "161",
        "column": "44",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "161: .map_err(|e| ForgeError::IoError { message: \ne.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "161",
        "column": "68",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "161: .map_err(|e| ForgeError::IoError { message: \ne.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "166",
        "column": "61",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "166: let entry = entry.map_err(|e| \nForgeError::IoError { message: e.to_string(), source: None \n})?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "166",
        "column": "85",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "166: let entry = entry.map_err(|e| \nForgeError::IoError { message: e.to_string(), source: None \n})?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "172",
        "column": "52",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "172: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "172",
        "column": "76",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "172: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "190",
        "column": "48",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "190: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "190",
        "column": "72",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "190: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "218",
        "column": "48",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "218: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "218",
        "column": "72",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "218: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "224",
        "column": "48",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "224: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "224",
        "column": "72",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "224: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "228",
        "column": "48",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "228: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "228",
        "column": "72",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "228: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "318",
        "column": "52",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "318: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "318",
        "column": "76",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "318: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "325",
        "column": "52",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "325: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "325",
        "column": "76",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "325: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "356",
        "column": "48",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "356: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "356",
        "column": "72",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "356: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "415",
        "column": "48",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "415: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "415",
        "column": "72",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "415: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "423",
        "column": "48",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "423: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "423",
        "column": "72",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "423: .map_err(|e| ForgeError::IoError { \nmessage: e.to_string(), source: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "643",
        "column": "42",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "643: return Err(ForgeError::IoError { message: \ne.to_string(), source: None });\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\snapshot.rs",
        "line": "643",
        "column": "66",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "643: return Err(ForgeError::IoError { message: \ne.to_string(), source: None });\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\crypto.rs",
        "line": "293",
        "column": "52",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "293: .map_err(|e| ForgeError::IoError { \nmessage: format!(\"Failed to backup master key: {}\", e), \nsource: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\crypto.rs",
        "line": "293",
        "column": "108",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "293: .map_err(|e| ForgeError::IoError { \nmessage: format!(\"Failed to backup master key: {}\", e), \nsource: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\crypto.rs",
        "line": "296",
        "column": "52",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "296: .map_err(|e| ForgeError::IoError { \nmessage: format!(\"Failed to write master key: {}\", e), \nsource: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\crypto.rs",
        "line": "296",
        "column": "107",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "296: .map_err(|e| ForgeError::IoError { \nmessage: format!(\"Failed to write master key: {}\", e), \nsource: None })?;\n145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\mod.rs",
        "line": "90",
        "column": "54",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `message`",
        "help": "",
        "rust_suggestion": "",
        "code_snippet": "145: IoError(String),",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      },
      {
        "file": "common\\src\\db\\mod.rs",
        "line": "90",
        "column": "78",
        "level": "error",
        "code": "E0559",
        "message": "variant `ForgeError::IoError` has no field \nnamed `source`",
        "help": "`#[warn(unused_mut)]` on by default\n\nwarning: variable does not need to be mutable\n    --> common\\src\\db\\redb.rs:2152:17\n     |\n2152 |             let mut count = 0;\n     |                 ----^^^^^\n     |                 |\n     |                 help: remove this `mut`\n\nwarning: unused variable: `metadata`\n   --> common\\src\\db\\snapshot.rs:274:13\n    |\n274 |         let metadata = self.get_snapshot(snapshot_id)?\n    |             ^^^^^^^^ help: if this is intentional, \nprefix it with an underscore: `_metadata`\n\nwarning: unused variable: `snapshot_dir`\n   --> common\\src\\db\\snapshot.rs:288:13\n    |\n288 |         let snapshot_dir = \nself.base_dir.join(\"data\").join(snapshot_id);\n    |             ^^^^^^^^^^^^ help: if this is \nintentional, prefix it with an underscore: `_snapshot_dir`\n\nwarning: unused variable: `tag`\n   --> common\\src\\db\\snapshot.rs:489:14\n    |\n489 |         for (tag, mut snapshots) in tag_groups {\n    |              ^^^ help: if this is intentional, prefix \nit with an underscore: `_tag`\n\nwarning: unused variable: `field`\n   --> common\\src\\db\\crypto.rs:233:46\n    |\n233 |     pub fn encrypt_field(&self, table: &str, field: \n&str, value: &[u8]) -> Result<String> {\n    |                                              ^^^^^ \nhelp: if this is intentional, prefix it with an underscore: \n`_field`\n\nwarning: unused variable: `field`\n   --> common\\src\\db\\crypto.rs:249:46\n    |\n249 |     pub fn decrypt_field(&self, table: &str, field: \n&str, value: &str) -> Result<Vec<u8>> {\n    |                                              ^^^^^ \nhelp: if this is intentional, prefix it with an underscore: \n`_field`\n\nwarning: unused variable: `referenced_table`\n   --> common\\src\\db\\schema.rs:728:34\n    |\n728 |             FieldType::Reference(referenced_table) => \n{\n    |                                  ^^^^^^^^^^^^^^^^ \nhelp: if this is intentional, prefix it with an underscore: \n`_referenced_table`\n\nwarning: unused variable: `e`\n   --> common\\src\\db\\metrics.rs:836:56\n    |\n836 |         \nserde_json::to_string_pretty(&export).map_err(|e| {\n    |                                                       \n ^ help: if this is intentional, prefix it with an \nunderscore: `_e`\n\nFor more information about this error, try `rustc --explain \nE0559`.\nwarning: `common` (lib) generated 70 warnings",
        "rust_suggestion": "`#[warn(unused_mut)]` on by default\n\nwarning: variable does not need to be mutable\n    --> common\\src\\db\\redb.rs:2152:17\n     |\n2152 |             let mut count = 0;\n     |                 ----^^^^^\n     |                 |\n     |                 help: remove this `mut`\n\nwarning: unused variable: `metadata`\n   --> common\\src\\db\\snapshot.rs:274:13\n    |\n274 |         let metadata = self.get_snapshot(snapshot_id)?\n    |             ^^^^^^^^ help: if this is intentional, \nprefix it with an underscore: `_metadata`\n\nwarning: unused variable: `snapshot_dir`\n   --> common\\src\\db\\snapshot.rs:288:13\n    |\n288 |         let snapshot_dir = \nself.base_dir.join(\"data\").join(snapshot_id);\n    |             ^^^^^^^^^^^^ help: if this is \nintentional, prefix it with an underscore: `_snapshot_dir`\n\nwarning: unused variable: `tag`\n   --> common\\src\\db\\snapshot.rs:489:14\n    |\n489 |         for (tag, mut snapshots) in tag_groups {\n    |              ^^^ help: if this is intentional, prefix \nit with an underscore: `_tag`\n\nwarning: unused variable: `field`\n   --> common\\src\\db\\crypto.rs:233:46\n    |\n233 |     pub fn encrypt_field(&self, table: &str, field: \n&str, value: &[u8]) -> Result<String> {\n    |                                              ^^^^^ \nhelp: if this is intentional, prefix it with an underscore: \n`_field`\n\nwarning: unused variable: `field`\n   --> common\\src\\db\\crypto.rs:249:46\n    |\n249 |     pub fn decrypt_field(&self, table: &str, field: \n&str, value: &str) -> Result<Vec<u8>> {\n    |                                              ^^^^^ \nhelp: if this is intentional, prefix it with an underscore: \n`_field`\n\nwarning: unused variable: `referenced_table`\n   --> common\\src\\db\\schema.rs:728:34\n    |\n728 |             FieldType::Reference(referenced_table) => \n{\n    |                                  ^^^^^^^^^^^^^^^^ \nhelp: if this is intentional, prefix it with an underscore: \n`_referenced_table`\n\nwarning: unused variable: `e`\n   --> common\\src\\db\\metrics.rs:836:56\n    |\n836 |         \nserde_json::to_string_pretty(&export).map_err(|e| {\n    |                                                       \n ^ help: if this is intentional, prefix it with an \nunderscore: `_e`\n\nFor more information about this error, try `rustc --explain \nE0559`.\nwarning: `common` (lib) generated 70 warnings",
        "code_snippet": "145: IoError(String),\n30: use crate::db::model::{EventPriority, Persistable, \nStorageBackend, StreamableEvent};\n226: fn write(&self, event: &AuditEvent) -> Result<()> \n{\n251: fn write(&self, event: &AuditEvent) -> Result<()> \n{\n276: fn write(&self, event: &AuditEvent) -> Result<()> \n{\n362: pub fn derive_key(master_key: &[u8], info: &[u8], \nlength: usize) -> Result<[u8; 32]> {\n784: let read_txn = db.begin_read().map_err(|e| {\n2143: let log_index_table = \nread_txn.open_table(TableDefinition::<&str, \n&str>::new(\"log_index\")).map_err(|e| {\n2147: let logs_table = \nread_txn.open_table(TableDefinition::<&str, \n&str>::new(\"logs\")).map_err(|e| {\n2151: let mut logs: Vec<LogEntry> = Vec::new();\n2152: let mut count = 0;\n2155: let level_str = if let Some(ref l) = \nlevel {\n2151: let mut logs: Vec<LogEntry> = Vec::new();\n2152: let mut count = 0;\n274: let metadata = self.get_snapshot(snapshot_id)?\n288: let snapshot_dir = \nself.base_dir.join(\"data\").join(snapshot_id);\n489: for (tag, mut snapshots) in tag_groups {\n233: pub fn encrypt_field(&self, table: &str, field: \n&str, value: &[u8]) -> Result<String> {\n249: pub fn decrypt_field(&self, table: &str, field: \n&str, value: &str) -> Result<Vec<u8>> {\n728: FieldType::Reference(referenced_table) => \n{\n836: serde_json::to_string_pretty(&export).map_err(|e| {",
        "ai_suggestion": "AI suggestion unavailable. Check your Gemini API key."
      }
    ]
  }
}